/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package rapaio.studio.printer;

import java.awt.BorderLayout;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import rapaio.graphics.base.Figure;
import rapaio.printer.FigurePanel;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//rapaio.studio.printer//GraphicalIOPrinter//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GraphicalIOPrinterTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "rightSlidingSide", openAtStartup = true)
@ActionID(category = "Window", id = "rapaio.studio.printer.GraphicalIOPrinterTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_GraphicalIOPrinterAction",
        preferredID = "GraphicalIOPrinterTopComponent"
)
@Messages({
    "CTL_GraphicalIOPrinterAction=GraphicalIOPrinter",
    "CTL_GraphicalIOPrinterTopComponent=GraphicalIOPrinter Window",
    "HINT_GraphicalIOPrinterTopComponent=This is a GraphicalIOPrinter window"
})
public final class GraphicalIOPrinterTopComponent extends TopComponent {

    private FigurePanel figurePanel;

    public GraphicalIOPrinterTopComponent() {
        initComponents();

        setName(Bundle.CTL_GraphicalIOPrinterTopComponent());
        setToolTipText(Bundle.HINT_GraphicalIOPrinterTopComponent());
        putClientProperty(TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imgPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        imgPanel.setLayout(new java.awt.BorderLayout());
        add(imgPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel imgPanel;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public void setFigure(Figure figure) {
        if (figurePanel != null) {
            imgPanel.remove(figurePanel);
        }
        figurePanel = new FigurePanel(figure);
        figurePanel.setVisible(true);
        imgPanel.add(figurePanel, BorderLayout.CENTER);
        revalidate();
        repaint();
    }
}
